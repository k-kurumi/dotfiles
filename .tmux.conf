#
# tmux config file: ~/.tmux.conf
#
################################################################################
#
# usage::
#
#	# 名前をつけて作成
#	tmux new-session -s aaaa
#
#	# 表示
#	tmux list-sessions
#
#	# アタッチ
#	tmux attach -t aaaa
#
#	# リードオンリーでアタッチ(ペアプロに使える) dはサイズの同期なし
#	tmux attach -rd -t aaaa
#
#	# コマンド入力
#	c-z :
#
#	# pane resize
#	c-z <カーソルキー>
#


# デフォルトのPrefix(C-b)を解除
unbind C-b
# Prefix
set-option -g prefix C-z

# aptitude install ncurses-term しないと /usr/share/terminfo/s/ にtermができない
# 256color
#set-option -g default-terminal screen-256color-s
#set-option -g default-terminal xterm
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

# vimでESC抜けが遅いのを改善
set -s escape-time 0

# mode-keys
set-window-option -g mode-keys vi

################################################################################
# 下部の表示部分
# ステータスライン更新間隔(秒)
set -g status-interval 5
set -g status-left-length 100
set -g status-right-length 50

# iterm2+tmuxでタブのリネームに必要
set-option -g set-titles on

# 配色
set -g status-bg red
set -g status-fg white

# [Wed 07/11 08:41 username@pcname] 1:zsh*
set -g status-left '#[fg=white,bold][%m/%d %H:%M #S] #[default]'

# 右は見づらいため表示しない
set -g status-right ''

set -g message-attr bold
set -g message-fg red
set -g message-bg white

set -g pane-active-border-fg red
set -g pane-active-border-bg red
set-window-option -g window-status-current-fg red
set-window-option -g window-status-current-bg white
#

# マウス選択がすぐ消えて使いづらいのでスクロールは使わない
# # マウスでスクロール
# set -g mouse on
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# 設定リロード
bind r source-file ~/.tmux.conf

# macとtmuxのコピーを共有する fish
# FIXME if-shellなどでOS判定して読み込もうとすると
# fishではないシェルで新しいウインドウを開くようになるバグ？
# bind経由では問題ないので一時的にそうする
bind m source-file ~/.tmux.mac.conf

# ウィンドウ移動
bind l next-window
bind h previous-window
# ウィンドウ選択画面
bind L choose-window

# 新ウィンドウ作成 1.9以降
bind n new-window -c "#{pane_current_path}"
# 1.8系
# bind n new-window
# set-option default-path "$PWD"


# paneをwindowに分解する
unbind q
bind q break-pane
# 上下に分割
bind S split-window -v -c "#{pane_current_path}"
# 左右に分割
bind | split-window -h -c "#{pane_current_path}"


#
set-option -g buffer-limit 32
set-option -g history-limit 10000

## pane移動
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R
## pane resize
bind -r Left resize-pane -L
bind -r Down resize-pane -D
bind -r Up resize-pane -U
bind -r Right resize-pane -R
bind p swap-pane -U

## ペイン終了
#bind k kill-pane
## ウィンドウ終了
#bind K kill-window
# ペイン番号表示
bind i display-panes

#
# copy mode
#
# ペインの分割
bind s split-window -v
bind v split-window -h

# コピーモード
bind [ copy-mode
bind Space copy-mode
# ペーストモード
bind ] paste-buffer
bind p paste-buffer

# vでマーク開始
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Vで行の先頭からマーク開始
bind-key -T copy-mode-vi V send-keys -X select-line

# C-vで矩形選択の切り替え
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# yでヤンク
bind-key -T copy-mode-vi y send-keys -X copy-selection

# Yで1行ヤンク
bind-key -T copy-mode-vi Y send-keys -X copy-line

# tmuxをネストしたとき <C-z> a <key> で内側のtmuxに送れる
# わかりにくいのでネスト自体使わない気もする
bind a send-prefix

# search hlsearchに当たるものがない？
set -g wrap-search off

# window閉じたりした時に、番号詰める。これをセットしとかないと、欠番出てきてこの方法で移動が出来なくなる。
# ウインドウを左右に入れ替えていく
set-option -g renumber-windows on
unbind H
bind -r H run 'cw=$(tmux display-message -p \#I) && [ $cw -gt 0 ] && tmux swap-window -s $cw -t $(($cw - 1))'
unbind L
bind -r L run 'cw=$(tmux display-message -p \#I) && tmux swap-window -s $cw -t $(($cw + 1))'

if-shell 'test "$(uname -s)" = Darwin' 'source-file ~/.tmux.mac.conf' 'source-file ~/.tmux.linux.conf'
