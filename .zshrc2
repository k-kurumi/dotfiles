
# pecoでコマンド履歴検索
function peco-history-selection() {
  BUFFER=`history -n 1 | tail -r  | awk '!a[$0]++' | peco`
  CURSOR=$#BUFFER
  zle reset-prompt
}
zle -N peco-history-selection
bindkey '^R' peco-history-selection

# ruby
export PATH="$HOME/.rbenv/bin:$PATH"
export PATH="$HOME/.rbenv/shims:$PATH"  # /usr/local/bin/rubyが先に読まれるため上書きする

# python
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# node
export PATH="$HOME/.ndenv/bin:$PATH"
eval "$(ndenv init -)"

# direnv
eval "$(direnv hook zsh)"

# プロンプトまわりの設定
autoload -Uz colors
colors
autoload -Uz vcs_info
setopt prompt_subst
zstyle ':vcs_info:git:*' check-for-changes true #formats 設定項目で %c,%u が使用可
zstyle ':vcs_info:git:*' stagedstr "%F{green}!" #commit されていないファイルがある
zstyle ':vcs_info:git:*' unstagedstr "%F{magenta}+" #add されていないファイルがある
zstyle ':vcs_info:*' formats "%F{cyan}%c%u(%b)%f" #通常
zstyle ':vcs_info:*' actionformats '[%b|%a]' #rebase 途中,merge コンフリクト等 formats 外の表示
precmd() { vcs_info }
PROMPT='
%{$fg[black]%(?.$bg[green].$bg[red])%} %? %{$reset_color%} %{$fg[green]%}>>>%{${reset_color}%} ${vcs_info_msg_0_} %{$fg[yellow]%}%~%{${reset_color}%}
$ '
RPROMPT=''
